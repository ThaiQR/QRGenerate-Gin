
stages:          # List of stages for jobs, and their order of execution
  - build
#   - test
#   - upload

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:stable

  services:
    - docker:dind

  variables:
    IMAGE_TAG: $CI_REGISTRY/$CI_REGISTRY_GROUP/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG 

# test-job:
#   stage: test
#   image: docker:stable

#   services:
#     - docker:dind
  
#   script:
#     - docker run --name gin-test qrgen-gin 

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - docker run -d --name gin-test 

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
